version: 2.1

commands:
  build_and_test:
    description: "Build and test"
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-composer-{{ checksum "composer.lock" }}
      - run:
          name: Copy environment variables
          command: |
            cp .env.example .env
      - run:
          name: Install pcntl extension
          command: sudo docker-php-ext-install pcntl
      - run:
          name: Install composer packages
          command: |
            composer install
      - save_cache:
          key: dependency-cache-composer-{{ checksum "composer.lock" }}
          paths:
            - ~/app/vendor
      - run:
          name: Test
          command: |
            php artisan key:generate
            vendor/bin/phpunit
  deploy_to_server:
    description: "Deploy"
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-rubygem-{{ checksum "Gemfile.lock" }}
      - run:
          name: Copy environment variables
          command: |
            cp .env.example .env
      - run:
          name: Fix host authenticity for your proxy server
          command: |
            ssh-keyscan "your-proxy-server.example.com" >> ~/.ssh/known_hosts
      - deploy:
          command: |
            gem install bundler -v 1.17.3
            bundle check || bundle install

            echo "current branch is ${CIRCLE_BRANCH}"
            echo "current tag is ${CIRCLE_TAG}"

            if [[ -n "${CIRCLE_TAG}" ]]; then
              USERNAME=${CIRCLE_USERNAME} VIA_BASTION=1 CI_BRANCH="${CIRCLE_TAG}" cap production deploy --trace
            elif [[ "${CIRCLE_BRANCH}" == "master" ]]; then
              USERNAME=${CIRCLE_USERNAME} VIA_BASTION=1 CI_BRANCH=master cap staging deploy --trace
            fi

      - save_cache:
          key: dependency-cache-rubygem-{{ checksum "Gemfile.lock" }}
          paths:
            - /var/lib/gems
            - /usr/local/bin/cap
            - /usr/local/bin/capify

jobs:
  build:
    working_directory: ~/app
    docker:
      - image: circleci/php:7.3.3

    steps:
      - build_and_test

  build_prod:
    working_directory: ~/app
    docker:
      - image: circleci/php:7.3.3

    steps:
      - build_and_test

  deploy_staging:
    docker:
      - image: circleci/ruby:2.4.2-jessie-node

    steps:
      - deploy_to_server

  deploy_prod:
    docker:
      - image: circleci/ruby:2.4.2-jessie-node

    steps:
      - deploy_to_server

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy_staging:
          requires:
            - build
          filters:
            branches:
              only: master
      - build_prod:
          filters:  # required since `deploy` has tag filters AND requires `build`
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - deploy_prod:
          requires:
            - build_prod
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

notify:
  webhooks:
    - url: https://outlook.office.com/webhook/xxxxxxxxxx/CircleCI/xxxxxxxxxx
